//MASTER
#include "NXCDefs.h"
#define BT_CONN 1
#define INBOX 1
#define OUTBOX 5
sub BTCheck(int conn){
                  CommBTConnectionType args;
                  args.Name = "NXT18"; // whatever the slave NXT's name is
                  args.ConnectionSlot = conn; // this is the desired connection slot (the above code uses 1)
                  args.Action = TRUE; // could use some #define with a non-zero value to connect.  0 == disconnect
                  if(!BluetoothStatus(conn)==NO_ERR)
                  {
                  SysCommBTConnection(args); // try to connect.
                  }
}
task main(){
     float in1, in2, in3, in4;
     string output = "023.1000.0100.0020.8";
     BTCheck(BT_CONN); //check slave connection
     //char* pch = strtok(va, " ");
     //string a = "001.1";

    // NumOut(10, LCD_LINE1, Pos(".", a));




     
     while(true){
                 TextOut(10,LCD_LINE1,"SENS0R 1:");
                 TextOut(10,LCD_LINE3,"SENSOR 2:");
                 TextOut(10,LCD_LINE5,"SENSOR 3:");
                 TextOut(10,LCD_LINE7,"SENSOR 4:");

                 ReceiveRemoteString(INBOX, true, output);
                // ReceiveRemoteNumber(INBOX,true, in1);
                // ReceiveRemoteNumber(INBOX,true, in2);
                // ReceiveRemoteNumber(INBOX,true, in3);
                // ReceiveRemoteNumber(INBOX,true, in4);
                in1 = StrToNum(SubStr(output, 0, 5));
                in2 = StrToNum(SubStr(output, 5, 5));
                in3 = StrToNum(SubStr(output, 10, 5));
                in4 = StrToNum(SubStr(output, 15, 5));
                NumOut(10,LCD_LINE2,in1);
                NumOut(10,LCD_LINE4,in2);
                NumOut(10,LCD_LINE6,in3);
                NumOut(10,LCD_LINE8,in4);
                ClearScreen();
   }
}
